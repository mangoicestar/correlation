// Import required java libraries
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
import org.apache.log4j.*;

// Extend HttpServlet class
public class AFMCorrelation extends HttpServlet {
   public void doGet(HttpServletRequest request,
                     HttpServletResponse response)
             throws ServletException, IOException
   {
       try
       {
       // Set response content type
          response.setContentType("text/html");
 
          Logger logger = Logger.getLogger(AFMCorrelation.class);
          SimpleLayout layout = new SimpleLayout();

          FileAppender appender = new FileAppender(layout, "/fm/app/NetExpert/Custom/correlation/web/WebDebug.txt", false);
          logger.addAppender(appender);
          logger.setLevel(Level.DEBUG);

          PrintWriter out = response.getWriter();
          String title = "Correlated Alarm List";
          String string = null;
 
          String mo = request.getParameter("mo_name");
          String alarm = request.getParameter("alarm_name");
          List<AlarmData> list = new ArrayList<AlarmData>();
          String CORR_ALARM_DIR = "/fm/app/NetExpert/Archive/nms1-vip/CORR-1";
          File file = new File(CORR_ALARM_DIR + "/" + mo + alarm);
          logger.debug("web 1 " + CORR_ALARM_DIR + "/" + mo + alarm);
          if (file.exists())
          {
  	     String[] column = null;
/*
             String OSI_DB_SERVER = "localhost";
             String ORACLE_SID = "nmsfmdev";
             Class.forName("oracle.jdbc.driver.OracleDriver");
             String url = "jdbc:oracle:thin:@" + OSI_DB_SERVER + ":1521:" + ORACLE_SID;
	     Connection conn = DriverLoader.getConnection(url, "nmsfmwork", "nmsfmwork");
	     Statement stmt = conn.createStatement();
*/

             BufferedReader br = new BufferedReader(new FileReader(file));
	     while ((string = br.readLine()) != null)
             {
                logger.debug("web 3 " + string);
                AlarmData alarmData = new AlarmData();
                column = string.split("\\|\\|", -1); 
                alarmData.mo = column[0];
                alarmData.alarm = column[1];
                alarmData.severity = column[2];
                alarmData.description = column[3];
                alarmData.alert = column[4];
                alarmData.accessId = column[5];
                alarmData.neName = column[6];
                alarmData.eventTime = column[7];
	        list.add(alarmData);
                logger.debug("web 5 " + alarmData.mo + " " + alarmData.alarm + " " + alarmData.severity);
             }
	     br.close();

/*
	     String sql = "select moname, alertname, severity, description, alert, accessid, nename, eventupdatetime from alert_v where ";
             for (int i = 0; i < list.size(); i++)
             {
	        if (i != 0)
	        {
	           sql += " or ";
                }
                sql += "alert = '" + list.get(i).alert + "'";
	     }
	     ResultSet rs = stmt.executeQuery(sql);
             logger.debug("web 4 " + sql);
             list.clear();
             if (rs != null)
	     {	 
	        while (rs.next())
                {
                   AlarmData alarmData = new AlarmData();
	           alarmData.mo = rs.getString(1);
                   alarmData.alarm = rs.getString(2);
//                   alarmData.severity = rs.getString(3);
                   alarmData.description = rs.getString(4);
                   alarmData.alert = rs.getString(5);
                   alarmData.accessId = rs.getString(6);
                   alarmData.neName = rs.getString(7);
//                   alarmData.eventTime = rs.getString(8);
	           list.add(alarmData);
          logger.debug("web 5 " + alarmData.mo + " " + alarmData.alarm + " " + alarmData.severity);
                }
             }
	     rs.close();
	     stmt.close();
	     conn.close();
*/
          }

          String severity = null, color = null;
          string = "";
          for (int i = 0; i < list.size(); i++)
          {
             logger.debug("web 6 " + list.get(i).mo + " " + list.get(i).alarm + " " + list.get(i).severity);
	     severity = list.get(i).severity;
	     if (severity.equals("critical"))
             {
	        color = "#FF000";
             }
	     else if (severity.equals("major"))
             {
	        color = "#FDD017";
             }
	     else if (severity.equals("minor"))
	     {
	        color = "#FFFF00";
	     }
	     else if (severity.equals("warning"))
	     {
	        color = "#151B8D";
             }
	     else if (severity.equals("indeterminate"))
             {
	        color = "#F6358A";
	     }
	     else if (severity.equals("normal"))
	     {
	        color = "#736F6E";
             }

             string += 
             "<tr bgcolor=\"" + color + "\">\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).accessId + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).eventTime + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).mo + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).alarm + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             severity + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).neName + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).description + "</td>\n" +
	     "<td style=\"word-wrap:break-word\">" +
             list.get(i).alert + "</td>\n" +
	     "</tr>\n";
          }

          String docType = "<!doctype html public \"-//w3c//dtd html 4.0 " + "transitional//en\">\n";
          out.println(docType +
          "<html>\n" +
          "<head><title>" + title + "</title></head>\n" +
          "<body bgcolor=\"#f0f0f0\">\n" +
          "<h1 align=\"center\">" + title + "</h1>\n" +
          "<table cellspacing=\"1\" border=\"1\" bordercolor=\"000000\" bgcolor=\"000000\" width=1400 style='table-layout:fixed'>\n" +
          "<col width=100>\n" +
          "<col width=100>\n" +
          "<col width=300>\n" +
          "<col width=100>\n" +
          "<col width=100>\n" +
          "<col width=100>\n" +
          "<col width=500>\n" +
          "<col width=100>\n" +
          "<tr bgcolor=\"6D7B8D\">\n" +
          "<td>ACCESS ID</td>\n" +
          "<td>EVENT TIME</td>\n" +
          "<td>AMO</td>\n" +
          "<td>ALARM NAME</td>\n" +
          "<td>SEVERITY</td>\n" +
          "<td>NE NAME</td>\n" +
          "<td>DESCRIPTION</td>\n" +
          "<td>ALERT</td>\n" +
          "</tr>\n" +
          string +
          "</table>\n" +
          "</body></html>");
      }
      catch (Exception e)
      {
         System.out.println(e);
         e.printStackTrace(System.out);
      }
   }
}
